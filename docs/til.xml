<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Isaac Flath</title>
<link>https://isaac-flath.tech/til.html</link>
<atom:link href="https://isaac-flath.tech/til.xml" rel="self" type="application/rss+xml"/>
<description>Blog for machine learning, programming, computer science and other data science related topics</description>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Sat, 21 Sep 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>NBDev Non Lib Exports</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/NbdevNonLibExports.html</link>
  <description><![CDATA[ 





<section id="today-i-learned" class="level1">
<h1>Today I Learned</h1>
<p><code>nbdev</code> has a single notebook export command that allows you to export notebooks without them being treated as a library.</p>
<p>This is done with the command <code>nb_export</code>.</p>
<p>In order to apply this to a directory and export them to an app for building FastHTML apps in notbooks, the command is <code>find nbs -name "*.ipynb" -print0 | xargs -0 -I {} nb_export --lib_path app {}</code></p>


</section>

 ]]></description>
  <category>FastHTML</category>
  <category>Python</category>
  <category>Web Development</category>
  <category>Nbdev</category>
  <guid>https://isaac-flath.tech/TIL/NbdevNonLibExports.html</guid>
  <pubDate>Sat, 21 Sep 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Download Youtube Videos with yt-dlp</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/YoutubeTerminalDownload.html</link>
  <description><![CDATA[ 





<section id="today-i-learned" class="level1">
<h1>Today I Learned</h1>
<p>There’s a magic terminal ccommand that can download youtube videos thanks to <a href="https://x.com/HamelHusain/status/1825751477060522435">Hamel’s twitter post</a></p>
<p><a href="https://github.com/yt-dlp/yt-dlp">This</a> is the library it uses, which seems like it can do lots of stuff that may be useful some day.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yt-dlp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> mp4 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cookies-from-browser</span> chrome <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;url&gt;"</span></span></code></pre></div>


</section>

 ]]></description>
  <category>terminal</category>
  <guid>https://isaac-flath.tech/TIL/YoutubeTerminalDownload.html</guid>
  <pubDate>Wed, 21 Aug 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>URL Redirect with a delay</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/DelayedRedirect.html</link>
  <description><![CDATA[ 





<section id="today-i-learned" class="level1">
<h1>Today I Learned</h1>
<p>You can set up a delated redirect with the Meta HTML tag. Conveniently you can use this in a 404 exception handler if your site moved to catch any possible route/link users go to.</p>
<p>I did to redirect people to the new location of the FastHTML gallery site.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fasthtml.common <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">new_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://gallery.fastht.ml/"</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _not_found(req, exc):</span>
<span id="cb1-5">    msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Div(H1(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"We moved to "</span>,A(href<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>new_url)(new_url))</span>
<span id="cb1-6">            P(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please update your bookmark!  Redirecting in 3 seconds..."</span>))</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> msg,Meta(http_equiv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"refresh"</span>, content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"3;url=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastHTML(exception_handlers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">404</span>:_not_found})</span>
<span id="cb1-10"></span>
<span id="cb1-11">serve()</span></code></pre></div>


</section>

 ]]></description>
  <category>FastHTML</category>
  <category>Python</category>
  <category>Web Development</category>
  <guid>https://isaac-flath.tech/TIL/DelayedRedirect.html</guid>
  <pubDate>Mon, 19 Aug 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Evaluate Reverse Polish Notation</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Evaluate Reverse Polish Notation.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>You are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation.</p>
<p>Evaluate the expression. Return an integer that represents the value of the expression.</p>
<p>Note that:</p>
<ul>
<li>The valid operators are <code>+</code>, <code>-</code>, <code>*</code>, and <code>/</code>.</li>
<li>Each operand may be an integer or another expression.</li>
<li>The division between two integers always truncates toward zero.</li>
<li>There will not be any division by zero.</li>
<li>The input represents a valid arithmetic expression in a reverse polish notation.</li>
<li>The answer and all the intermediate calculations can be represented in a 32-bit integer.</li>
</ul>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="1a27689b" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>]</span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fn(tokens)</span>
<span id="cb1-4"></span>
<span id="cb1-5">    tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span>]</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fn(tokens)</span>
<span id="cb1-7"></span>
<span id="cb1-8">    tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-11"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span>]</span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fn(tokens)</span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="beb2fb16" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> operator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> add, mul, sub, truediv</span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> evalRPN(tokens: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-4">    stack <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Map each valid operator to a callable</span></span>
<span id="cb2-6">    operators <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span>: add, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span>: mul, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>: sub, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x,y: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(truediv(x,y))}</span>
<span id="cb2-7">    </span>
<span id="cb2-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tokens:</span>
<span id="cb2-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For every operator in tokens calculate res of last 2 with that operator</span></span>
<span id="cb2-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> operators:</span>
<span id="cb2-11">            f,s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stack.pop(),stack.pop()</span>
<span id="cb2-12">            stack.append(operators[t](s,f))</span>
<span id="cb2-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if it's not an operator add the value to the stack</span></span>
<span id="cb2-15">            stack.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(t))</span>
<span id="cb2-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> stack.pop() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Last value remaining is the answer</span></span>
<span id="cb2-17"></span>
<span id="cb2-18">test(evalRPN)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>math</category>
  <category>stack</category>
  <guid>https://isaac-flath.tech/TIL/Evaluate Reverse Polish Notation.html</guid>
  <pubDate>Sun, 10 Mar 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Min Stack</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Min Stack.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Design a stack that supports <code>push</code>, <code>pop</code>, <code>top</code>, and retrieving the minimum element in constant time.</p>
<p>Implement the <code>MinStack</code> class:</p>
<ul>
<li><code>MinStack()</code> initializes the stack object.</li>
<li><code>void push(int val)</code> pushes the element <code>val</code> onto the stack.</li>
<li><code>void pop()</code> removes the element on the top of the stack.</li>
<li><code>int top()</code> gets the top element of the stack.</li>
<li><code>int getMin()</code> retrieves the minimum element in the stack.</li>
</ul>
<p>You must implement a solution with <code>O(1)</code> time complexity for each function.</p>
<section id="examples" class="level3">
<h3 class="anchored" data-anchor-id="examples">Examples</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">Input</span>
<span id="cb1-2">[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MinStack"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"push"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"push"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"push"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"getMin"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pop"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"getMin"</span>]</span>
<span id="cb1-3">[[],[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],[],[],[],[]]</span>
<span id="cb1-4"></span>
<span id="cb1-5">Output</span>
<span id="cb1-6">[null,null,null,null,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,null,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb1-7"></span>
<span id="cb1-8">Explanation</span>
<span id="cb1-9">MinStack minStack <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new MinStack()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">minStack.push(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11">minStack.push(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">minStack.push(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">minStack.getMin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-14">minStack.pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">minStack.top()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-16">minStack.getMin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
<p>Constraints:</p>
<ul>
<li><code>-231 &lt;= val &lt;= 231 - 1</code></li>
<li>Methods <code>pop</code>, <code>top</code> and <code>getMin</code> operations will always be called on non-empty stacks.</li>
<li>At most <code>3 * 104</code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>getMin</code>.</li>
</ul>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<p>Each method is O(1).</p>
<ul>
<li>Time Complexity: <code>O(1)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="41340f40" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> MinStack:</span>
<span id="cb2-2"></span>
<span id="cb2-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stack <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-6"></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> push(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, val: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stack.append(val)</span>
<span id="cb2-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack: </span>
<span id="cb2-10">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],val))</span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-12">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack.append(val)</span>
<span id="cb2-13"></span>
<span id="cb2-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> pop(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stack.pop()</span>
<span id="cb2-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack.pop()</span>
<span id="cb2-17"></span>
<span id="cb2-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> top(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stack[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-20"></span>
<span id="cb2-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> getMin(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_stack[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>stack</category>
  <category>design</category>
  <guid>https://isaac-flath.tech/TIL/Min Stack.html</guid>
  <pubDate>Sat, 24 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Trapping Rain Water</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Trapping Rain Water/Trapping Rain Water.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p>
<p><img src="https://isaac-flath.tech/TIL/Trapping Rain Water/paste-1.png" class="img-fluid"></p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="106289f0" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-3">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fn(height) </span>
<span id="cb1-5"></span>
<span id="cb1-6">    height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb1-7">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fn(height) </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="495787d1" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> trap(height: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-3">    l,r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start on both ends</span></span>
<span id="cb2-4">    vol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-5">    lm, rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height[l], height[r]</span>
<span id="cb2-6">    </span>
<span id="cb2-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> r: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stop when pointers meet</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The side with largest max determines the bin depth</span></span>
<span id="cb2-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> lm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> rm: </span>
<span id="cb2-11">            l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-12">            lm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(height[l], lm)</span>
<span id="cb2-13">            vol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> lm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> height[l] </span>
<span id="cb2-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-15">            r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> </span>
<span id="cb2-16">            rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(height[r], rm) </span>
<span id="cb2-17">            vol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> height[r]</span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> vol</span>
<span id="cb2-19"></span>
<span id="cb2-20">test(trap)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>two pointers</category>
  <guid>https://isaac-flath.tech/TIL/Trapping Rain Water/Trapping Rain Water.html</guid>
  <pubDate>Thu, 22 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Container With Most Water</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Container With Most Water/Container With Most Water.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>You are given an integer array <code>height</code> of length <code>n</code>. There are n vertical lines drawn such that the two endpoints of the <code>ith</code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.</p>
<p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p>
<p>Return the maximum amount of water a container can store.</p>
<p><img src="https://isaac-flath.tech/TIL/Container With Most Water/paste-1.png" class="img-fluid"></p>
<p>Notice that you may not slant the container.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="3e8998bb" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]</span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span></span>
<span id="cb1-4">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(height)</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-6"></span>
<span id="cb1-7">    height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-8">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-9">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(height)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="b475b963" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> maxArea(height: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-3">    l,r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start at each end</span></span>
<span id="cb2-4">    maxV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate through half, so you stop when pointers meet somewhere in middle</span></span>
<span id="cb2-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> r:</span>
<span id="cb2-8">        lh, rh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height[l],height[r]</span>
<span id="cb2-9"></span>
<span id="cb2-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate current area and keep if bigger</span></span>
<span id="cb2-11">        maxV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(maxV, (r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(lh,rh))</span>
<span id="cb2-12"></span>
<span id="cb2-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># move pointer on smallest side</span></span>
<span id="cb2-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> lh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> rh:</span>
<span id="cb2-15">            l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-17">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> maxV</span>
<span id="cb2-19">test(maxArea)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>two pointers</category>
  <category>greedy</category>
  <guid>https://isaac-flath.tech/TIL/Container With Most Water/Container With Most Water.html</guid>
  <pubDate>Wed, 21 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Three Sum</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Three Sum.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an integer array nums, return all the triplets <code>[nums[i], nums[j], nums[k]]</code> such that <code>i != j</code>, <code>i != k</code>, and <code>j != k</code>, and <code>nums[i] + nums[j] + nums[k] == 0</code>.</p>
<p>Notice that the solution set must not contain duplicate triplets.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="7053788e" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-5"></span>
<span id="cb1-6">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-7">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-9"></span>
<span id="cb1-10">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-11">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]</span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<p>This solution builds on <a href="https://isaac-flath.github.io/DataStructuresAlgorithms/posts/Two%20Sum%20II%20-%20Input%20Array%20is%20Sorted.html">Two Sum II - Input Array is Sorted</a>. If this solution is confusing, revisit it after understanding that proble,</p>
<ul>
<li>Time Complexity: <code>O(1)</code></li>
<li>Space Complexity: <code>O(nlogn)</code></li>
</ul>
<div id="f3c1f02d" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> threeSum(nums: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb2-3">    nums.sort()</span>
<span id="cb2-4">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-5"></span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)):</span>
<span id="cb2-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> nums[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> nums[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]: <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">        l,r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> r:</span>
<span id="cb2-11">            curr_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nums[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nums[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nums[r]</span>
<span id="cb2-12"></span>
<span id="cb2-13">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Two Sum on sorted list</span></span>
<span id="cb2-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> curr_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If too small</span></span>
<span id="cb2-15">                l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make it bigger</span></span>
<span id="cb2-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> curr_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If too big</span></span>
<span id="cb2-17">                r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make it smaller</span></span>
<span id="cb2-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-19">                res.append([nums[i],nums[l],nums[r]])</span>
<span id="cb2-20">                l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># move to next</span></span>
<span id="cb2-21">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> nums[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> nums[l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> r:</span>
<span id="cb2-22">                    l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep incrementing if dupes</span></span>
<span id="cb2-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span>
<span id="cb2-24"></span>
<span id="cb2-25">test(threeSum)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>two pointers</category>
  <category>sorting</category>
  <guid>https://isaac-flath.tech/TIL/Three Sum.html</guid>
  <pubDate>Tue, 20 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Two Sum II - Input Array is Sorted</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Two Sum II - Input Array is Sorted.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given a 1-indexed array of integers <code>numbers</code> that is already sorted in non-decreasing order, find two numbers such that they add up to a specific <code>target</code> number. Let these two numbers be <code>numbers[index1]</code> and <code>numbers[index2]</code> where <code>1 &lt;= index1 &lt; index2 &lt;= numbers.length</code>.</p>
<p>Return the indices of the two numbers, <code>index1</code> and <code>index2</code>, added by one as an integer array <code>[index1, index2]</code> of length 2.</p>
<p>The tests are generated such that there is exactly one solution. You may not use the same element twice.</p>
<p>Your solution must use only constant extra space.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="4aadf1d5" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>]</span>
<span id="cb1-3">    target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb1-4">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(numbers,target) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-6"></span>
<span id="cb1-7">    numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb1-8">    target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb1-9">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(numbers,target) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-11"></span>
<span id="cb1-12">    numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-13">    target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-14">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(numbers,target) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(1)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="8106ad9e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> twoSum(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], target: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb2-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start at each end of the list</span></span>
<span id="cb2-4">    i1, i2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numbers) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> i2:</span>
<span id="cb2-7">        curr_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[i1] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numbers[i2]</span>
<span id="cb2-8"></span>
<span id="cb2-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> curr_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> target: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If too small</span></span>
<span id="cb2-10">            i1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make it bigger</span></span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> curr_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> target: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If too big</span></span>
<span id="cb2-12">            i2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make it smaller</span></span>
<span id="cb2-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, i2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if juuussstt right</span></span>
<span id="cb2-15"></span>
<span id="cb2-16">test(twoSum)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>two pointers</category>
  <guid>https://isaac-flath.tech/TIL/Two Sum II - Input Array is Sorted.html</guid>
  <pubDate>Mon, 19 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Valid Palindrome</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Valid Palindrome.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>
<p>Given a string <code>s</code>, return <code>true</code> if it is a palindrome, or <code>false</code> otherwise.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="db056dd4" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A man, a plan, a canal: Panama"</span></span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(s)</span>
<span id="cb1-4">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"race a car"</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> fn(s)</span>
<span id="cb1-6">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span></span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> fn(s)</span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="e14c5393" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> isPalindrome(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb2-2">    lp, rp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> lp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> rp:        </span>
<span id="cb2-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ignore non-alphanumeric characters by moving pointer</span></span>
<span id="cb2-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alternative to if statements is filter(lambda x: x.isalnum(), s) prior to loop</span></span>
<span id="cb2-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> s[lp].isalnum():</span>
<span id="cb2-8">            lp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> s[rp].isalnum():</span>
<span id="cb2-11">            rp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span>        </span>
<span id="cb2-13"></span>
<span id="cb2-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return and exit at first failure</span></span>
<span id="cb2-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s[lp].lower() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> s[rp].lower():</span>
<span id="cb2-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-17"></span>
<span id="cb2-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move to next characters</span></span>
<span id="cb2-19">        lp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-20">        rp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-21"></span>
<span id="cb2-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no failures, then it's a palindrome</span></span>
<span id="cb2-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-24"></span>
<span id="cb2-25">test(isPalindrome)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>two pointers</category>
  <category>string</category>
  <guid>https://isaac-flath.tech/TIL/Valid Palindrome.html</guid>
  <pubDate>Wed, 14 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Longest Consecutive Sequence</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Longest Consecutive Sequence.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an unsorted array of integers <code>nums</code>, return the length of the longest consecutive elements sequence.</p>
<p>You must write an algorithm that runs in <code>O(n)</code> time.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="2149467d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    val1, val2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(low,high)</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="bb6a2770" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> longestConsecutive(nums: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-4">    numset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(nums)</span>
<span id="cb2-5">    max_seq_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> nums:</span>
<span id="cb2-8"></span>
<span id="cb2-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if beginning of a sequence</span></span>
<span id="cb2-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numset:</span>
<span id="cb2-11">            seq_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num</span>
<span id="cb2-12">            seq_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-13">            </span>
<span id="cb2-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep incrementing values until you're at end of sequence</span></span>
<span id="cb2-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> seq_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numset:</span>
<span id="cb2-16">                seq_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-17">                seq_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-18">            </span>
<span id="cb2-19">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep sequence length if it's the longest so far</span></span>
<span id="cb2-20">            max_seq_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(max_seq_len, seq_length)</span>
<span id="cb2-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> max_seq_len</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>hash table</category>
  <guid>https://isaac-flath.tech/TIL/Longest Consecutive Sequence.html</guid>
  <pubDate>Tue, 13 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Encode and Decode Strings</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Encode and Decode Strings.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Design an algorithm to encode a list of strings to a string. The encoded string is then sent over the network and is decoded back to the original list of strings.</p>
<p>Machine 1 (sender) has the function:</p>
<pre><code>string encode(vector&lt;string&gt; strs) {
  // ... your code
  return encoded_string;
}</code></pre>
<p>Machine 2 (receiver) has the function:</p>
<pre><code>vector&lt;string&gt; decode(string s) {
  //... your code
  return strs;
}</code></pre>
<p>So Machine 1 does:</p>
<pre><code>string encoded_string = encode(strs);</code></pre>
<p>and Machine 2 does:</p>
<pre><code>vector&lt;string&gt; strs2 = decode(encoded_string);</code></pre>
<p><code>strs2</code> in Machine 2 should be the same as <code>strs</code> in Machine 1.</p>
<p>Implement <code>encode</code> and <code>decode</code> methods.</p>
<p>You are not allowed to solve the problem using any serialize methods (such as <code>eval</code>).</p>
<p><strong>Constraints:</strong></p>
<ul>
<li>1 &lt;= strs.length &lt;= 200</li>
<li>0 &lt;= strs[i].length &lt;= 200</li>
<li>strs[i] contains any possible characters out of 256 valid ASCII characters.</li>
</ul>
<p><strong>Follow up:</strong> Could you write a generalized algorithm to work on any possible set of characters?</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="6831e382" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb5-2">    codec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn()</span>
<span id="cb5-3">    </span>
<span id="cb5-4">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>]</span>
<span id="cb5-5">    expected_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5#Hello5#World'</span></span>
<span id="cb5-6">    actual_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> codec.encode(expected)</span>
<span id="cb5-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected_str</span>
<span id="cb5-8">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> codec.decode(actual_str)</span>
<span id="cb5-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected</span>
<span id="cb5-10"></span>
<span id="cb5-11">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>]</span>
<span id="cb5-12">    expected_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0#'</span></span>
<span id="cb5-13">    actual_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> codec.encode(expected)</span>
<span id="cb5-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected_str</span>
<span id="cb5-15">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> codec.decode(actual_str)</span>
<span id="cb5-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected</span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="49e42d09" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Codec:</span>
<span id="cb6-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> encode(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, strs: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb6-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Encodes a list of strings to a single string.</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb6-6">        encoded_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb6-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strs:</span>
<span id="cb6-8">            encoded_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> s</span>
<span id="cb6-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> encoded_str</span>
<span id="cb6-10"></span>
<span id="cb6-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> decode(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb6-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Decodes a single string to a list of strings.</span></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb6-14">        i,l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-15"></span>
<span id="cb6-16">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s):</span>
<span id="cb6-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span>:</span>
<span id="cb6-19">                l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s[i])</span>
<span id="cb6-20">                i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-22">                out.append(s[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>l])</span>
<span id="cb6-23">                i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> l</span>
<span id="cb6-24">                l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> out</span>
<span id="cb6-26">test(Codec)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>string</category>
  <guid>https://isaac-flath.tech/TIL/Encode and Decode Strings.html</guid>
  <pubDate>Mon, 12 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Valid Sudoku</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Valid Sudoku/Valid Sudoku.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Determine if a <code>9 x 9</code> Sudoku board is valid. Only the filled cells need to be validated according to the following rules:</p>
<ol type="1">
<li>Each row must contain the digits <code>1-9</code> without repetition.</li>
<li>Each column must contain the digits <code>1-9</code> without repetition.</li>
<li>Each of the nine <code>3 x 3</code> sub-boxes of the grid must contain the digits <code>1-9</code> without repetition.</li>
</ol>
<p><strong>Note:</strong></p>
<ul>
<li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li>
<li>Only the filled cells need to be validated according to the mentioned rules.</li>
</ul>
<p><img src="https://isaac-flath.tech/TIL/Valid Sudoku/sodoku.png" class="img-fluid"></p>
<pre><code>board = 
[["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]</code></pre>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="4b806373" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb2-2">    board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-3">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-4">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-5">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>]</span>
<span id="cb2-6">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>]</span>
<span id="cb2-7">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>]</span>
<span id="cb2-8">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-9">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>]</span>
<span id="cb2-10">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>]]</span>
<span id="cb2-11">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-12">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(board)</span>
<span id="cb2-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb2-14"></span>
<span id="cb2-15">    board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-16">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-17">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-18">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>]</span>
<span id="cb2-19">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>]</span>
<span id="cb2-20">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>]</span>
<span id="cb2-21">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb2-22">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>]</span>
<span id="cb2-23">            ,[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>]]</span>
<span id="cb2-24">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-25">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(board)</span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<p>Where <code>n</code> in the number of cells on the sudoku board.</p>
<div id="acbba31c" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> isValidSudoku(board: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb3-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize sets to track if there's duplicate values</span></span>
<span id="cb3-4">    rowSet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)]</span>
<span id="cb3-5">    colSet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)]</span>
<span id="cb3-6">    gridSet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)]</span>
<span id="cb3-7"></span>
<span id="cb3-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for each cell in matrix</span></span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rowIndex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>):</span>
<span id="cb3-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> colIndex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>):</span>
<span id="cb3-11">            cellValue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[rowIndex][colIndex]</span>
<span id="cb3-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cellValue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>: <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb3-13"></span>
<span id="cb3-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the grid index number</span></span>
<span id="cb3-15">            gridIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rowIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> colIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-16"></span>
<span id="cb3-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if cell value is already in set for row/col/grid</span></span>
<span id="cb3-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (cellValue <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rowSet[rowIndex] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb3-19">                cellValue <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colSet[colIndex] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> </span>
<span id="cb3-20">                cellValue <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> gridSet[gridIndex]): </span>
<span id="cb3-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Then there's a duplicate and it's not valid</span></span>
<span id="cb3-22">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb3-23"></span>
<span id="cb3-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Otherwise add to the set and go to the next cell</span></span>
<span id="cb3-25">            rowSet[rowIndex].add(cellValue)</span>
<span id="cb3-26">            colSet[colIndex].add(cellValue)</span>
<span id="cb3-27">            gridSet[gridIndex].add(cellValue)</span>
<span id="cb3-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you make it through all cells with no dupes, then it's valid</span></span>
<span id="cb3-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-30"></span>
<span id="cb3-31">test(isValidSudoku)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>hash table</category>
  <category>matrix</category>
  <guid>https://isaac-flath.tech/TIL/Valid Sudoku/Valid Sudoku.html</guid>
  <pubDate>Tue, 06 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Product of Array Except Self</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Product of Array Except Self.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an integer array <code>nums</code>, return an array answer such that <code>answer[i]</code> is equal to the product of all the elements of nums except <code>nums[i]</code>.</p>
<p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>
<p>You must write an algorithm that runs in <code>O(n)</code> time and without using the division operation.</p>
<p>Can you solve the problem in <code>O(1)</code> extra space complexity? (The output array does not count as extra space for space complexity analysis.)</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="a571e11f" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb1-4">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums)</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected</span>
<span id="cb1-6"></span>
<span id="cb1-7">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] </span>
<span id="cb1-8">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-9">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected</span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="95a762ae" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> productExceptSelf(nums: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb2-3">    prefix, postfix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-4">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)</span>
<span id="cb2-5">    </span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)):</span>
<span id="cb2-7">        out[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prefix</span>
<span id="cb2-8">        prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> nums[i]</span>
<span id="cb2-9"></span>
<span id="cb2-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb2-11">        out[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> postfix</span>
<span id="cb2-12">        postfix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> nums[i]</span>
<span id="cb2-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> out</span>
<span id="cb2-14"></span>
<span id="cb2-15">test(productExceptSelf)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>prefix sum</category>
  <guid>https://isaac-flath.tech/TIL/Product of Array Except Self.html</guid>
  <pubDate>Mon, 05 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Top K Frequent Elements</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Top K Frequent Elements.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return the <code>k</code> most frequent elements. You may return the answer in any order.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="ebc2b91c" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] </span>
<span id="cb1-3">    k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>    </span>
<span id="cb1-4">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb1-5">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums,k)</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-7"></span>
<span id="cb1-8">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-9">    k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>   </span>
<span id="cb1-10">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-11">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums,k)</span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="b22a11f6" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> topKFrequent(nums: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]: </span>
<span id="cb2-3">    hashmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> nums:</span>
<span id="cb2-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a hashmap of counts for each item in num</span></span>
<span id="cb2-6">        hashmap[num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hashmap.get(num,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">    buckets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key,val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> hashmap.items():</span>
<span id="cb2-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put nums in a list where index location == occurances</span></span>
<span id="cb2-11">        buckets[val].append(key)</span>
<span id="cb2-12"></span>
<span id="cb2-13">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(buckets) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb2-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through buckets backward and append to output</span></span>
<span id="cb2-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> buckets[i]:</span>
<span id="cb2-17">            output.append(num)</span>
<span id="cb2-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(output) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k:</span>
<span id="cb2-19">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># When you have k nums you are done</span></span>
<span id="cb2-20">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> output</span>
<span id="cb2-21"></span>
<span id="cb2-22">test(topKFrequent)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>hash table</category>
  <category>bucket sort</category>
  <category>counting</category>
  <guid>https://isaac-flath.tech/TIL/Top K Frequent Elements.html</guid>
  <pubDate>Sun, 04 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Grouped Anagrams</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Grouped Anagrams.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an array of strings <code>strs</code>, group the anagrams together. You can return the answer in any order.</p>
<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="6e5e63a1" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    strs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eat"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tea"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tan"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ate"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nat"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bat"</span>]</span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eat'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tea'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nat'</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bat'</span>]]</span>
<span id="cb1-4"></span>
<span id="cb1-5">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(strs)</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(actual) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(expected)</span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(m * n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<p>Where <code>m</code> is the average length of the strings in <code>strs</code>, and <code>n</code> is the length of <code>strs</code></p>
<div id="882237c5" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> defaultdict</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> groupAnagrams(strs: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]:</span>
<span id="cb2-5">    grouped_anagrams <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> defaultdict(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>) </span>
<span id="cb2-6"></span>
<span id="cb2-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strs:</span>
<span id="cb2-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># key[0] represents a, key[1] represents b, etc.</span></span>
<span id="cb2-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># key is an array of character counts</span></span>
<span id="cb2-10">        key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span> </span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s:</span>
<span id="cb2-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use unicode to calculate index location in key that corresponds to c and increment</span></span>
<span id="cb2-13">            key[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(c) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-14"></span>
<span id="cb2-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list can't be key, so convert key to tuple for usage with dict</span></span>
<span id="cb2-16">        grouped_anagrams[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(key)].append(s)</span>
<span id="cb2-17"></span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> grouped_anagrams.values()</span>
<span id="cb2-19"></span>
<span id="cb2-20">test(groupAnagrams)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>hash table</category>
  <category>string</category>
  <guid>https://isaac-flath.tech/TIL/Grouped Anagrams.html</guid>
  <pubDate>Sat, 03 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Valid Anagram</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Valid Anagram.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> if <code>t</code> is an anagram of <code>s</code>, and <code>false</code> otherwise.</p>
<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="5811bdfb" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    s,t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anagram"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nagaram"</span></span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-4">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(s,t)</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-6"></span>
<span id="cb1-7">    s,t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rat"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"car"</span></span>
<span id="cb1-8">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-9">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(s,t)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<section id="hashmap" class="level3">
<h3 class="anchored" data-anchor-id="hashmap">Hashmap</h3>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="0ff9af17" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> isAnagram(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, t: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(t): <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">    countS,countT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}, {}</span>
<span id="cb2-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s)):</span>
<span id="cb2-6">        countS[s[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> countS.get(s[i],<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-7">        countT[t[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> countT.get(t[i],<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-8">    </span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> countS:</span>
<span id="cb2-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> countS[c] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> countT.get(c,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>): <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-11"></span>
<span id="cb2-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-13"></span>
<span id="cb2-14">test(isAnagram)</span></code></pre></div>
</div>
<div id="ae6afe4a" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> isAnagram(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, t: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb3-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Counter(s) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Counter(t)</span>
<span id="cb3-4"></span>
<span id="cb3-5">test(isAnagram)</span></code></pre></div>
</div>
</section>
<section id="sorting" class="level3">
<h3 class="anchored" data-anchor-id="sorting">Sorting</h3>
<ul>
<li>Time Complexity: <code>O(nlogn)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="bdd024cb" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> isAnagram(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, t: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(s)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(t))</span>
<span id="cb4-3"></span>
<span id="cb4-4">test(isAnagram)</span></code></pre></div>
</div>


</section>
</section>

 ]]></description>
  <category>hash table</category>
  <category>string</category>
  <category>sorting</category>
  <guid>https://isaac-flath.tech/TIL/Valid Anagram.html</guid>
  <pubDate>Thu, 01 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Contains Duplicate</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Contains Duplicate.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an integer array <code>nums</code>, return <code>true</code> if any value appears at least twice in the array, and return <code>false</code> if every element is distinct.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="9c8c5528" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-4">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums)</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-6"></span>
<span id="cb1-7">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb1-8">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-9">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-11"></span>
<span id="cb1-12">    nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb1-13">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-14">    actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(nums)</span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<section id="hashmap" class="level3">
<h3 class="anchored" data-anchor-id="hashmap">Hashmap</h3>
<ul>
<li>Time Complexity: <code>O(n)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="f4e44f22" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> containsDuplicate(nums: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb2-3">    seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> nums:</span>
<span id="cb2-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seen:</span>
<span id="cb2-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-8">            seen.add(num)</span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">test(containsDuplicate)    </span></code></pre></div>
</div>
</section>
<section id="sorting" class="level3">
<h3 class="anchored" data-anchor-id="sorting">Sorting</h3>
<ul>
<li>Time Complexity: <code>O(nlogn)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="52ae42cb" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> containsDuplicate(nums: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb3-3">    nums.sort() </span>
<span id="cb3-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nums)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb3-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nums[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> nums[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]: </span>
<span id="cb3-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>: </span>
<span id="cb3-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb3-9"></span>
<span id="cb3-10">test(containsDuplicate)    </span></code></pre></div>
</div>


</section>
</section>

 ]]></description>
  <category>hash table</category>
  <category>array</category>
  <category>sorting</category>
  <guid>https://isaac-flath.tech/TIL/Contains Duplicate.html</guid>
  <pubDate>Thu, 01 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Count Symmetric Integers</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Count Symmetric Integers.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>You are given two positive integers <code>low</code> and <code>high</code>.</p>
<p>An integer <code>x</code> consisting of <code>2 * n</code> digits is symmetric if the sum of the first <code>n</code> digits of <code>x</code> is equal to the sum of the last <code>n</code> digits of <code>x</code>. Numbers with an odd number of digits are never symmetric.</p>
<p>Return the number of symmetric integers in the range <code>[low, high]</code>.</p>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="014cff27" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    low,high <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb1-4">    symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(low,high) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 11, 22, 33, 44, 55, 66, 77, 88, and 99.</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-6"></span>
<span id="cb1-7">    low, high <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1230</span></span>
<span id="cb1-8">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-9">    symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(low,high) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1203, 1212, 1221, and 1230</span></span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-11"></span>
<span id="cb1-12">    low, high <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb1-13">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">624</span></span>
<span id="cb1-14">    symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(low,high) </span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n^2)</code></li>
<li>Space Complexity: <code>O(1)</code></li>
</ul>
<div id="0d3890f9" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr):</span>
<span id="cb2-2">    ttl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> a <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb2-4">        ttl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(a)</span>
<span id="cb2-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ttl</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> split_int(x):</span>
<span id="cb2-8">    half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-9">    left, right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[:half], x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>half:]</span>
<span id="cb2-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> left, right</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> isSymmetric(x, ):</span>
<span id="cb2-13">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x)</span>
<span id="cb2-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-15">    half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(x[:half]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>half:])</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> countSymmetricIntegers(low: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, high: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb2-19">    symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(low, high<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb2-21">        symmetric_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> isSymmetric(num)</span>
<span id="cb2-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> symmetric_count</span>
<span id="cb2-23">    </span>
<span id="cb2-24">test(countSymmetricIntegers)</span></code></pre></div>
</div>
<div id="289cbc34" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timeit</span>
<span id="cb3-2">timeit.timeit(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: countSymmetricIntegers(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>),number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>4.718307459028438</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>math</category>
  <category>enumeration</category>
  <guid>https://isaac-flath.tech/TIL/Count Symmetric Integers.html</guid>
  <pubDate>Wed, 31 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Pancake Sorting</title>
  <dc:creator>Isaac Flath</dc:creator>
  <link>https://isaac-flath.tech/TIL/Pancake Sorting.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>Problem Source: Leetcode</p>
</blockquote>
<section id="problem-description" class="level2">
<h2 class="anchored" data-anchor-id="problem-description">Problem Description</h2>
<p>Given an array of integers <code>arr</code>, sort the array by performing a series of pancake flips.</p>
<p>In one pancake flip we do the following steps:</p>
<ol type="1">
<li>Choose an integer k where 1 &lt;= k &lt;= arr.length.</li>
<li>Reverse the sub-array arr[0…k-1] (0-indexed).</li>
</ol>
<p>For example, if <code>arr = [3,2,1,4]</code> and we performed a pancake flip choosing <code>k = 3</code>, we reverse the sub-array <code>[3,2,1]</code>, so <code>arr = [1,2,3,4]</code> after the pancake flip at <code>k = 3</code>.</p>
<p>Return an array of the k-values corresponding to a sequence of pancake flips that sort arr. Any valid answer that sorts the array within <code>10 * arr.length</code> flips will be judged as correct.</p>
<p><strong>Constraints:</strong></p>
<ul>
<li>1 &lt;= arr.length &lt;= 100</li>
<li>1 &lt;= arr[i] &lt;= arr.length</li>
<li>All integers in arr are unique (i.e.&nbsp;arr is a permutation of the integers from 1 to arr.length)</li>
</ul>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<div id="8fa1930a" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test(fn):</span>
<span id="cb1-2">    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-3">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb1-4">    ans, actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(value)</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span>
<span id="cb1-6"></span>
<span id="cb1-7">    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb1-8">    expected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb1-9">    ans, actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(value)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected </span></code></pre></div>
</div>
</section>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<ul>
<li>Time Complexity: <code>O(n^2)</code></li>
<li>Space Complexity: <code>O(n)</code></li>
</ul>
<div id="4d0edbf2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reverse(l, n):</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>): </span>
<span id="cb2-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inplace swaps means go through 1/2 the list portion we want to swap</span></span>
<span id="cb2-6">        l[i], l[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> l[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], l[i]</span>
<span id="cb2-7"></span>
<span id="cb2-8">    </span>
<span id="cb2-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> pancakeSort(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb2-10">    swap_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> value_to_sort <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if n-1 elements are correct, then n elements are correct, so don't check the smallest value (1)</span></span>
<span id="cb2-12">        current_location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr.index(value_to_sort)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> value_to_sort <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> current_location: </span>
<span id="cb2-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If value already in correct position continue</span></span>
<span id="cb2-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> current_location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If value is in front, this step isn't needed</span></span>
<span id="cb2-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If not, flip to get desired value in front</span></span>
<span id="cb2-18">            reverse(arr, current_location)</span>
<span id="cb2-19">            swap_points.append(current_location)</span>
<span id="cb2-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flip to get value in final position</span></span>
<span id="cb2-21">        reverse(arr,value_to_sort)</span>
<span id="cb2-22">        swap_points.append(value_to_sort)</span>
<span id="cb2-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> swap_points, arr</span>
<span id="cb2-24"></span>
<span id="cb2-25">test(pancakeSort)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>array</category>
  <category>two pointers</category>
  <category>greedy</category>
  <category>sorting</category>
  <guid>https://isaac-flath.tech/TIL/Pancake Sorting.html</guid>
  <pubDate>Tue, 30 Jan 2024 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
